-- üß† ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å Loader
local cfg = getgenv().EggFarmConfig or {}
local settings = getgenv().EggFarmSettings or {}

local CHECK_INTERVAL = settings.CheckInterval or 20 -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≠‡∏ö
local DEBUG_MODE = settings.EnableLog or false      -- ‡πÄ‡∏õ‡∏¥‡∏î log ‡πÄ‡∏û‡∏¥‡πà‡∏°
local RETRY_ATTEMPTS = 3                            -- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á retry ‡∏ñ‡πâ‡∏≤ Horst ‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

-- üß© ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô log ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
local function log(...)
	if DEBUG_MODE then
		print("[EggFarm]", ...)
	end
end

-- üß© Service ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local noInteractDup = false
local menuOpened = false

-- üü¢ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö Eggs (‡πÅ‡∏ö‡∏ö‡∏£‡∏≠‡∏à‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ô‡πà)
local function openEggMenu()
	if noInteractDup then return end
	noInteractDup = true
	xpcall(function()
		local tab = nil
		local tries = 0

		repeat
			tab = PlayerGui:FindFirstChild("ScreenGui")
				and PlayerGui.ScreenGui.Menus.ChildTabs:FindFirstChild("Eggs Tab")
			task.wait(0.5)
			tries += 1
			if tries % 5 == 0 then
				log("[EggFarm] ‚è≥ ‡∏£‡∏≠‡πÄ‡∏à‡∏≠‡∏õ‡∏∏‡πà‡∏° Eggs Tab... (" .. tries .. " ‡∏£‡∏≠‡∏ö)")
			end
		until tab or tries >= 30

		if not tab then
			warn("[EggFarm] ‚ùå ‡∏´‡∏≤‡πÅ‡∏ó‡πá‡∏ö Eggs ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏£‡∏≠ 15 ‡∏ß‡∏¥")
			noInteractDup = false
			return
		end

		-- ‡∏Å‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π Eggs
		GuiService.SelectedObject = tab
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
		GuiService.SelectedObject = nil

		-- ‚úÖ ‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤ EggRows ‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏£‡∏¥‡∏á ‡πÜ
		local eggRows = nil
		local waitCount = 0
		repeat
			eggRows = PlayerGui.ScreenGui.Menus.Children.Eggs.Content:FindFirstChild("EggRows")
			task.wait(0.5)
			waitCount += 1
			if waitCount % 4 == 0 then
				log("[EggFarm] ‚è≥ ‡∏£‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ Eggs ‡πÇ‡∏´‡∏•‡∏î... (" .. waitCount .. ")")
			end
		until eggRows or waitCount >= 40

		if eggRows then
			print("[EggFarm] ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ Eggs ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)")
			menuOpened = true
		else
			warn("[EggFarm] ‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ Eggs ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏•‡∏±‡∏á‡∏£‡∏≠ 20 ‡∏ß‡∏¥")
		end

		noInteractDup = false
	end, function(err)
		warn("[EggFarm] ‚ö†Ô∏è openEggMenu error:", err)
		noInteractDup = false
	end)
end

-- üßÆ ‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å "x10" ‡∏´‡∏£‡∏∑‡∏≠ "10"
local function extractNumber(text)
	if not text or text == "" then return 0 end
	local number = string.match(text, "x%s*(%d+)") or string.match(text, "(%d+)")
	return tonumber(number) or 0
end

-- üü¢ ‡∏£‡∏≠‡πÉ‡∏´‡πâ Horst ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏° (‡πÑ‡∏°‡πà‡∏°‡∏µ timeout)
local function waitForHorstBlocking()
	local t = 0
	while type(_G.Horst_AccountChangeDone) ~= "function" do
		task.wait(1)
		t += 1
		if DEBUG_MODE then
			warn(("[EggFarm] ‚è≥ ‡∏£‡∏≠ Horst Core ‡πÇ‡∏´‡∏•‡∏î... (%ds)"):format(t))
		end
	end
	print("[EggFarm] ‚úÖ Horst ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß")
end

-- üü¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πà‡∏á DONE ‡πÅ‡∏ö‡∏ö Retry 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
local function sendDone()
	for i = 1, RETRY_ATTEMPTS do
		local ok, err = pcall(_G.Horst_AccountChangeDone)
		if ok then
			print("[EggFarm] ‚úÖ DONE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà " .. i .. ")")
			return true
		else
			warn("[EggFarm] ‚ùå ‡∏™‡πà‡∏á DONE ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà", i, ":", err)
			task.wait(2)
		end
	end
	return false
end

-- üü¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å
task.spawn(function()
	pcall(function()
		waitForHorstBlocking()
		openEggMenu()
		task.wait(0.5) -- ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ GUI update ‡∏ä‡πâ‡∏≤

		while true do
			local eggRowsPath = PlayerGui:FindFirstChild("ScreenGui") 
				and PlayerGui.ScreenGui.Menus.Children.Eggs.Content:FindFirstChild("EggRows")

			if not eggRowsPath then
				openEggMenu()
				task.wait(CHECK_INTERVAL)
				continue
			end

			local ticketNumber, magicBeanNumber, starEggNumber = 0, 0, 0

			for _, eggRow in pairs(eggRowsPath:GetChildren()) do
				if eggRow:FindFirstChild("TypeName") and eggRow:FindFirstChild("EggSlot") then
					local t = eggRow.TypeName.Text
					local slot = eggRow.EggSlot
					if slot:FindFirstChild("Count") then
						local count = extractNumber(slot.Count.Text)
						if t == "Ticket" then
							ticketNumber = count
						elseif t == "Magic Bean" then
							magicBeanNumber = count
						elseif t == "Star Egg" then
							starEggNumber = count
						end
					end
				end
			end

			log(string.format("Ticket=%d | Bean=%d | StarEgg=%d", ticketNumber, magicBeanNumber, starEggNumber))

			local allConditionsMet = true

			if cfg["CheckTicket"] and ticketNumber ~= cfg["TargetTicket"] then
				allConditionsMet = false
				log("Ticket ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πâ‡∏≤")
			end

			if cfg["CheckMagicBean"] and magicBeanNumber ~= cfg["TargetMagicBean"] then
				allConditionsMet = false
				log("Magic Bean ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πâ‡∏≤")
			end

			if cfg["CheckStarEgg"] and starEggNumber ~= cfg["TargetStarEgg"] then
				allConditionsMet = false
				log("Star Egg ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πâ‡∏≤")
			end

			-- ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏£‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡∏™‡πà‡∏á Done
			if allConditionsMet then
				print("[EggFarm] üéØ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Ñ‡∏£‡∏ö ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á DONE")
				task.wait(1) -- ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ GUI delay
				sendDone()
				break
			end

			task.wait(CHECK_INTERVAL) -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡πÑ‡∏õ
		end
	end)
end)
